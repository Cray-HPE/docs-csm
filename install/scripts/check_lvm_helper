# This file is going to be loaded by the check_lvm.sh script and run on ncn-m002 via ssh

# MIT License
#
# (C) Copyright [2021] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Create temporary script to use for checking LVMs
HELPER=/tmp/check-lvm-helper-$$.sh

echo '#!/usr/bin/env bash
# MIT License
#
# (C) Copyright [2021] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

NCN=$1
shift
rc=0
while [ $# -gt 0 ]; do
    if ! OUT=$(blkid -L $1) ; then
        echo "ERROR: $NCN: Command failed: blkid -L $1" 1>&2
        rc=1
    elif [ -z "$OUT" ]; then
        echo "ERROR: $NCN: No device found with filesystem label $1" 1>&2
        rc=1
    fi
    shift
done
[ $rc -eq 0 ] && echo "$NCN: OK"
exit $rc' > $HELPER
if [ $? -ne 0 ]; then
    echo "ERROR: ncn-m002: Unable to write to $HELPER"
    exit 1
fi

# Make it executable
chmod +x $HELPER

rc=0
# Run our temporary script here on ncn-m002
echo "Checking ncn-m002..."
$HELPER ncn-m002 ETCDLVM || rc=1

# Now check the other master nodes
count=0
for NCN in $(grep -ow "ncn-m[0-9][0-9][0-9]" /etc/hosts | sort -u | grep -v "^ncn-m00[12]$") ; do
    let count+=1
    echo "Checking $NCN..."
    if ! scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p $HELPER $NCN:/tmp ; then
        echo "ERROR: Command failed: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p $HELPER" 1>&2
        rc=1
    elif ! ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $NCN -- $HELPER $NCN ETCDLVM ; then
        rc=1
    fi
done
if [ $count -eq 0 ]; then
    echo "ERROR: No master NCNs found other than ncn-m001 and ncn-m002" 1>&2
    rc=1
fi

# Now check the worker nodes
count=0
for NCN in $(grep -ow "ncn-w[0-9][0-9][0-9]" /etc/hosts | sort -u) ; do
    let count+=1
    echo "Checking $NCN..."
    if ! scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p $HELPER $NCN:/tmp ; then
        echo "ERROR: Command failed: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p $HELPER" 1>&2
        rc=1
    elif ! ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $NCN -- $HELPER $NCN CONLIB CONRUN K8SLET ; then
        rc=1
    fi
done
if [ $count -lt 3 ]; then
    echo "ERROR: Fewer than 3 worker NCNs found" 1>&2
    rc=1
fi
exit $rc
