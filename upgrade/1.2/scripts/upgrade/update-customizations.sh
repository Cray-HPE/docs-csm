#!/usr/bin/env bash
# Copyright 2021 Hewlett Packard Enterprise Development LP

set -e
BASEDIR=$(dirname $0)
. ${BASEDIR}/upgrade-state.sh
trap 'err_report' ERR
set -o pipefail

usage() {
    echo >&2 "usage: ${0##*/} [-i] [CUSTOMIZATIONS-YAML]"
    exit 1
}

args=()
while [[ $# -gt 0 ]]; do
    case "$1" in
        -h)
            usage
            ;;
        -i)
            inplace="yes"
            ;;
        *)
            args+=("$1")
            ;;
    esac
    shift
done

set -- "${args[@]}"

[[ $# -eq 1 ]] || usage

set -o xtrace

customizations="$1"

if [[ ! -f "$customizations" ]]; then
    echo >&2 "error: no such file: $customizations"
    usage
fi

c="$(mktemp)"
trap "rm -f '$c'" EXIT

cp "$customizations" "$c"

# Ensure Gitea's PVC configuration has been removed (stop gap for potential upgrades from CSM 0.9.4)
yq d -i "$c" 'spec.kubernetes.services.gitea.cray-service.persistentVolumeClaims'

yq w -i "$c" 'spec.kubernetes.services.cray-hms-badger-loader.nexus.repo' 'csm-diags'

yq d -i "$c" 'spec.kubernetes.services.cray-keycloak-gatekeeper.hosts(.==mma.{{ network.dns.external }})'
if [[ -z "$(yq r "$c" 'spec.kubernetes.services.cray-keycloak-gatekeeper.hosts(.==csms.{{ network.dns.external }})')" ]]; then
    yq w -i "$c" 'spec.kubernetes.services.cray-keycloak-gatekeeper.hosts[+]' 'csms.{{ network.dns.external }}'
fi

yq w -i "$c" 'spec.kubernetes.services.cray-uas-mgr.uasConfig.uai_macvlan_range_start' '{{ wlm.macvlansetup.nmn_reservation_start }}'
yq w -i "$c" 'spec.kubernetes.services.cray-uas-mgr.uasConfig.uai_macvlan_range_end' '{{ wlm.macvlansetup.nmn_reservation_end }}'
yq d -i "$c" 'spec.kubernetes.services.cray-uas-mgr.uasConfig.images'

yq w -i "$c" -- 'spec.kubernetes.services.sma-elasticsearch.esJavaOpts' '-Xmx30g -Xms30g'

yq w -i "$c" 'spec.kubernetes.services.sma-rsyslog-aggregator.cray-service.service.loadBalancerIP' '10.92.100.72'
yq w -i "$c" 'spec.kubernetes.services.sma-rsyslog-aggregator.cray-service.volumeClaimTemplate.storageClassName' 'sma-block-replicated'
yq w -i "$c" 'spec.kubernetes.services.sma-rsyslog-aggregator.cray-service.volumeClaimTemplate.resources.requests.storage' '16Gi'
yq w -i "$c" 'spec.kubernetes.services.sma-rsyslog-aggregator.rsyslogAggregatorHmn.service.loadBalancerIP' '10.94.100.72'
yq w -i "$c" 'spec.kubernetes.services.sma-rsyslog-aggregator.rsyslogAggregatorCan.externalHostname' 'rsyslog.cmn.{{ network.dns.external }}'
yq d -i "$c" 'spec.kubernetes.services.sma-rsyslog-aggregator.volumeClaimTemplate'

yq w -i "$c" 'spec.kubernetes.services.sma-rsyslog-aggregator-udp.cray-service.service.loadBalancerIP' '10.92.100.72'
yq w -i "$c" 'spec.kubernetes.services.sma-rsyslog-aggregator-udp.cray-service.volumeClaimTemplate.storageClassName' 'sma-block-replicated'
yq w -i "$c" 'spec.kubernetes.services.sma-rsyslog-aggregator-udp.cray-service.volumeClaimTemplate.resources.requests.storage' '16Gi'
yq w -i "$c" 'spec.kubernetes.services.sma-rsyslog-aggregator-udp.rsyslogAggregatorUdpHmn.service.loadBalancerIP' '10.94.100.72'
yq w -i "$c" 'spec.kubernetes.services.sma-rsyslog-aggregator-udp.rsyslogAggregatorCan.externalHostname' 'rsyslog.cmn.{{ network.dns.external }}'
yq d -i "$c" 'spec.kubernetes.services.sma-rsyslog-aggregator-udp.volumeClaimTemplate'

# Add new PowerDNS values that would be generated by CSI on a fresh install
yq w -i "$c" 'spec.network.dns.primary_server_name' primary
yq w -i --style=double "$c" 'spec.network.dns.secondary_servers' ""
yq w -i --style=double "$c" 'spec.network.dns.notify_zones' ""

# Add new generator for the PowerDNS API key Sealed Secret
if [[ -z "$(yq r "$c" 'spec.kubernetes.sealed_secrets.powerdns')" ]]; then
  yq w -i "$c" 'spec.kubernetes.sealed_secrets.powerdns.generate.name' cray-powerdns-credentials
  yq w -i "$c" 'spec.kubernetes.sealed_secrets.powerdns.generate.data[0].type' randstr
  yq w -i "$c" 'spec.kubernetes.sealed_secrets.powerdns.generate.data[0].args.name' pdns_api_key
  yq w -i "$c" 'spec.kubernetes.sealed_secrets.powerdns.generate.data[0].args.length' 32
fi

# Add new generator for the dnssec key
if [[ -z "$(yq r "$c" 'spec.kubernetes.sealed_secrets.dnssec')" ]]; then
  yq w -i "$c" 'spec.kubernetes.sealed_secrets.dnssec.generate.name' dnssec-keys
  yq w -i "$c" 'spec.kubernetes.sealed_secrets.dnssec.generate.data[0].type' static_b64
  yq w -i "$c" 'spec.kubernetes.sealed_secrets.dnssec.generate.data[0].args.name' dummy
  yq w -i "$c" 'spec.kubernetes.sealed_secrets.dnssec.generate.data[0].args.value' ZHVtbXkK
fi

# Remove unused cray-externaldns configuration and add domain filters required for bifurcated CAN.
yq d -i "$c" 'spec.kubernetes.services.cray-externaldns'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-externaldns.external-dns.domainFilters[+]' 'cmn.{{ network.dns.external }}'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-externaldns.external-dns.domainFilters[+]' 'can.{{ network.dns.external }}'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-externaldns.external-dns.domainFilters[+]' 'chn.{{ network.dns.external }}'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-externaldns.external-dns.domainFilters[+]' 'nmn.{{ network.dns.external }}'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-externaldns.external-dns.domainFilters[+]' 'hmn.{{ network.dns.external }}'

# Add required PowerDNS and Unbound configuration
yq w -i "$c" 'spec.kubernetes.services.cray-dns-unbound.domain_name' '{{ network.dns.external }}'
yq w -i --style=double "$c" 'spec.kubernetes.services.cray-powerdns-manager.manager.primary_server' '{{ network.dns.primary_server_name }}/{{ network.netstaticips.site_to_system_lookups }}'
yq w -i --style=double "$c" 'spec.kubernetes.services.cray-powerdns-manager.manager.secondary_servers' "{{ network.dns.secondary_servers }}"
yq w -i --style=double "$c" 'spec.kubernetes.services.cray-powerdns-manager.manager.base_domain' "{{ network.dns.external }}"
yq w -i --style=double "$c" 'spec.kubernetes.services.cray-powerdns-manager.manager.notify_zones' "{{ network.dns.notify_zones }}"
yq w -i "$c" 'spec.kubernetes.services.cray-powerdns-manager.cray-service.sealedSecrets[0]' '{{ kubernetes.sealed_secrets.dnssec | toYaml }}'
yq w -i "$c" 'spec.kubernetes.services.cray-dns-powerdns.service.cmn.loadBalancerIP' '{{ network.netstaticips.site_to_system_lookups }}'
yq w -i "$c" 'spec.kubernetes.services.cray-dns-powerdns.cray-service.sealedSecrets[0]' '{{ kubernetes.sealed_secrets.powerdns | toYaml }}'

# Add proxiedWebAppExternalHostnames
yq w -i --style=single "$c" 'spec.proxiedWebAppExternalHostnames.customerManagement[+]' "{{ kubernetes.services['gatekeeper-policy-manager']['gatekeeper-policy-manager'].externalAuthority }}"
yq w -i --style=single "$c" 'spec.proxiedWebAppExternalHostnames.customerManagement[+]' "{{ kubernetes.services['cray-nexus'].istio.ingress.hosts.ui.authority }}"
yq w -i --style=single "$c" 'spec.proxiedWebAppExternalHostnames.customerManagement[+]' "{{ kubernetes.services['cray-istio'].istio.tracing.externalAuthority }}"
yq w -i --style=single "$c" 'spec.proxiedWebAppExternalHostnames.customerManagement[+]' "{{ kubernetes.services['cray-kiali'].externalAuthority }}"
yq w -i --style=single "$c" 'spec.proxiedWebAppExternalHostnames.customerManagement[+]' "{{ kubernetes.services['cray-sysmgmt-health']['prometheus-operator'].prometheus.prometheusSpec.externalAuthority }}"
yq w -i --style=single "$c" 'spec.proxiedWebAppExternalHostnames.customerManagement[+]' "{{ kubernetes.services['cray-sysmgmt-health']['prometheus-operator'].alertmanager.alertmanagerSpec.externalAuthority }}"
yq w -i --style=single "$c" 'spec.proxiedWebAppExternalHostnames.customerManagement[+]' "{{ kubernetes.services['cray-sysmgmt-health']['prometheus-operator'].grafana.externalAuthority }}"
yq w -i --style=single "$c" 'spec.proxiedWebAppExternalHostnames.customerManagement[+]' '{{ kubernetes.services.gitea.externalHostname }}'
yq w -i --style=single "$c" 'spec.proxiedWebAppExternalHostnames.customerManagement[+]' 'sma-grafana.cmn.{{ network.dns.external }}'
yq w -i --style=single "$c" 'spec.proxiedWebAppExternalHostnames.customerManagement[+]' 'sma-kibana.cmn.{{network.dns.external}}'
yq w -i --style=single "$c" 'spec.proxiedWebAppExternalHostnames.customerManagement[+]' 'csms.cmn.{{ network.dns.external }}'
yq w -i --style=single "$c" 'spec.proxiedWebAppExternalHostnames.customerAccess[+]' 'capsules.can.{{ network.dns.external }}'
yq w -i --style=single "$c" 'spec.proxiedWebAppExternalHostnames.customerHighSpeed[+]' 'capsules.chn.{{ network.dns.external }}'


# Add network to externalAuthority names
yq w -i "$c" 'spec.kubernetes.services.cray-nexus.istio.ingress.hosts.ui.authority' 'nexus.cmn.{{ network.dns.external }}'
yq w -i "$c" 'spec.kubernetes.services.cray-istio.istio.tracing.externalAuthority' 'jaeger-istio.cmn.{{ network.dns.external }}'
yq w -i "$c" 'spec.kubernetes.services.cray-sysmgmt-health.prometheus-operator.prometheus.prometheusSpec.externalAuthority' 'prometheus.cmn.{{ network.dns.external }}'
yq w -i "$c" 'spec.kubernetes.services.cray-sysmgmt-health.prometheus-operator.alertmanager.alertmanagerSpec.externalAuthority' 'alertmanager.cmn.{{ network.dns.external }}'
yq w -i "$c" 'spec.kubernetes.services.cray-sysmgmt-health.prometheus-operator.grafana.externalAuthority' 'grafana.cmn.{{ network.dns.external }}'
yq w -i "$c" 'spec.kubernetes.services.cray-s3.service.annotations.[external-dns.alpha.kubernetes.io/hostname]' 's3.cmn.{{ network.dns.external }}'
yq w -i "$c" 'spec.kubernetes.services.gitea.externalHostname' 'vcs.cmn.{{ network.dns.external }}'
yq w -i "$c" 'spec.kubernetes.services.sma-rsyslog-aggregator.rsyslogAggregatorCan.externalHostname' 'rsyslog.cmn.{{ network.dns.external }}'
yq w -i "$c" 'spec.kubernetes.services.sma-rsyslog-aggregator-udp.rsyslogAggregatorCan.externalHostname' 'rsyslog.cmn.{{ network.dns.external }}'
yq w -i "$c" 'spec.kubernetes.services.sma-kibana.externalAuthority' 'sma-kibana.cmn.{{ network.dns.external }}'
yq w -i "$c" 'spec.kubernetes.services.sma-grafana.externalAuthority' 'sma-grafana.cmn.{{ network.dns.external }}'
yq w -i "$c" 'spec.kubernetes.services.gatekeeper-policy-manager.gatekeeper-policy-manager.externalAuthority' 'opa-gpm.cmn.{{ network.dns.external }}'

# cray-opa changes
yq d -i "$c" 'spec.kubernetes.services.cray-opa.jwtValidation'
yq w -i "$c" 'spec.kubernetes.services.cray-opa.ingresses.ingressgateway.issuers.shasta-cmn' 'https://api.cmn.{{ network.dns.external }}/keycloak/realms/shasta'
yq w -i "$c" 'spec.kubernetes.services.cray-opa.ingresses.ingressgateway.issuers.keycloak-cmn' 'https://auth.cmn.{{ network.dns.external }}/keycloak/realms/shasta'
yq w -i "$c" 'spec.kubernetes.services.cray-opa.ingresses.ingressgateway.issuers.shasta-nmn' 'https://api.nmn.{{ network.dns.external }}/keycloak/realms/shasta'
yq w -i "$c" 'spec.kubernetes.services.cray-opa.ingresses.ingressgateway.issuers.keycloak-nmn' 'https://auth.nmn.{{ network.dns.external }}/keycloak/realms/shasta'
yq w -i "$c" 'spec.kubernetes.services.cray-opa.ingresses.ingressgateway-customer-admin.issuers.shasta-cmn' 'https://api.cmn.{{ network.dns.external }}/keycloak/realms/shasta'
yq w -i "$c" 'spec.kubernetes.services.cray-opa.ingresses.ingressgateway-customer-admin.issuers.keycloak-cmn' 'https://auth.cmn.{{ network.dns.external }}/keycloak/realms/shasta'
yq w -i "$c" 'spec.kubernetes.services.cray-opa.ingresses.ingressgateway-customer-user.issuers.shasta-chn' 'https://api.chn.{{ network.dns.external }}/keycloak/realms/shasta'
yq w -i "$c" 'spec.kubernetes.services.cray-opa.ingresses.ingressgateway-customer-user.issuers.keycloak-chn' 'https://auth.chn.{{ network.dns.external }}/keycloak/realms/shasta'
yq w -i "$c" 'spec.kubernetes.services.cray-opa.ingresses.ingressgateway-customer-user.issuers.shasta-can' 'https://api.can.{{ network.dns.external }}/keycloak/realms/shasta'
yq w -i "$c" 'spec.kubernetes.services.cray-opa.ingresses.ingressgateway-customer-user.issuers.keycloak-can' 'https://auth.can.{{ network.dns.external }}/keycloak/realms/shasta'

# cray-istio changes
yq d -i "$c" 'spec.kubernetes.services.cray-istio-deploy'
yq d -i "$c" 'spec.kubernetes.services.cray-istio.istio.prometheus'
yq d -i "$c" 'spec.kubernetes.services.cray-istio.istio.kiali'
yq d -i "$c" 'spec.kubernetes.services.cray-istio.istio.grafana'
yq d -i "$c" 'spec.kubernetes.services.cray-istio.istio.gateways'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-istio.certificate.dnsNames[+]' '*.cmn.{{ network.dns.external }}'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-istio.certificate.dnsNames[+]' '*.can.{{ network.dns.external }}'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-istio.certificate.dnsNames[+]' '*.chn.{{ network.dns.external }}'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-istio.certificate.dnsNames[+]' '*.nmn.{{ network.dns.external }}'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-istio.certificate.dnsNames[+]' '*.hmn.{{ network.dns.external }}'
yq d -i "$c" 'spec.kubernetes.services.cray-istio.extraIngressServices'
yq d -i "$c" 'spec.kubernetes.services.cray-istio.ingressgatewayhmn'

yq w -i "$c" 'spec.kubernetes.services.cray-istio.services.istio-ingressgateway.loadBalancerIP' '{{ network.netstaticips.nmn_api_gw }}'
yq w -i "$c" 'spec.kubernetes.services.cray-istio.services.istio-ingressgateway.serviceAnnotations.[metallb.universe.tf/address-pool]' 'node-management'
yq w -i "$c" 'spec.kubernetes.services.cray-istio.services.istio-ingressgateway.serviceAnnotations.[external-dns.alpha.kubernetes.io/hostname]' 'api.nmn.{{ network.dns.external}},auth.nmn.{{ network.dns.external }}'

yq w -i "$c" 'spec.kubernetes.services.cray-istio.services.istio-ingressgateway-hmn.loadBalancerIP' '{{ network.netstaticips.hmn_api_gw }}'
yq w -i "$c" 'spec.kubernetes.services.cray-istio.services.istio-ingressgateway-hmn.serviceAnnotations[metallb.universe.tf/address-pool]' 'hardware-management'
yq w -i "$c" 'spec.kubernetes.services.cray-istio.services.istio-ingressgateway-hmn.serviceAnnotations.[external-dns.alpha.kubernetes.io/hostname]' 'hmcollector.hmn.{{ network.dns.external }}'

yq w -i "$c" 'spec.kubernetes.services.cray-istio.services.istio-ingressgateway-can.serviceAnnotations.[metallb.universe.tf/address-pool]' 'customer-access'
yq w -i "$c" 'spec.kubernetes.services.cray-istio.services.istio-ingressgateway-can.serviceAnnotations.[external-dns.alpha.kubernetes.io/hostname]' 'api.can.{{ network.dns.external}},auth.can.{{ network.dns.external }}'

yq w -i "$c" 'spec.kubernetes.services.cray-istio.services.istio-ingressgateway-cmn.serviceAnnotations.[metallb.universe.tf/address-pool]' 'customer-management'
yq w -i "$c" 'spec.kubernetes.services.cray-istio.services.istio-ingressgateway-cmn.serviceAnnotations.[external-dns.alpha.kubernetes.io/hostname]' 'api.cmn.{{ network.dns.external}},auth.cmn.{{ network.dns.external }}'

yq w -i "$c" 'spec.kubernetes.services.cray-istio.services.istio-ingressgateway-chn.serviceAnnotations.[metallb.universe.tf/address-pool]' 'customer-high-speed'
yq w -i "$c" 'spec.kubernetes.services.cray-istio.services.istio-ingressgateway-chn.serviceAnnotations.[external-dns.alpha.kubernetes.io/hostname]' 'api.chn.{{ network.dns.external}},auth.chn.{{ network.dns.external }}'

yq w -i "$c" 'spec.kubernetes.services.cray-istio.services.istio-ingressgateway-local.loadBalancerIP' '{{ network.netstaticips.nmn_api_gw_local }}'
yq w -i "$c" 'spec.kubernetes.services.cray-istio.services.istio-ingressgateway-local.serviceAnnotations.[metallb.universe.tf/address-pool]' 'node-management'

# cray-keycloak changes
yq w -i "$c" 'spec.kubernetes.services.cray-keycloak.setup.keycloak.customerAccessUrl' 'https://auth.cmn.{{ network.dns.external }}/keycloak'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-keycloak.setup.keycloak.gatekeeper.proxiedHosts' '{{ proxiedWebAppExternalHostnames.customerManagement }}'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-keycloak.setup.keycloak.clients.oauth2-proxy-customer-management.proxiedHosts' '{{ proxiedWebAppExternalHostnames.customerManagement }}'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-keycloak.setup.keycloak.clients.oauth2-proxy-customer-access.proxiedHosts' '{{ proxiedWebAppExternalHostnames.customerAccess }}'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-keycloak.setup.keycloak.clients.oauth2-proxy-customer-high-speed.proxiedHosts' '{{ proxiedWebAppExternalHostnames.customerHighSpeed }}'

# remove cray-keycloak-gatekeeper
yq d -i "$c" 'spec.kubernetes.services.cray-keycloak-gatekeeper'

# Add oauth2-proxies
yq w -i "$c" 'spec.kubernetes.sealed_secrets.cray-oauth2-proxy-customer-management.generate.name' 'cray-oauth2-proxy-customer-management'
yq w -i "$c" 'spec.kubernetes.sealed_secrets.cray-oauth2-proxy-customer-management.generate.data[0].type' randstr
yq w -i "$c" 'spec.kubernetes.sealed_secrets.cray-oauth2-proxy-customer-management.generate.data[0].args.name' cookie-secret
yq w -i "$c" 'spec.kubernetes.sealed_secrets.cray-oauth2-proxy-customer-management.generate.data[0].args.length' 32
yq w -i "$c" 'spec.kubernetes.sealed_secrets.cray-oauth2-proxy-customer-management.generate.data[0].args.encoding' base64
yq w -i "$c" 'spec.kubernetes.sealed_secrets.cray-oauth2-proxy-customer-management.generate.data[0].args.url_safe' yes

yq w -i "$c" 'spec.kubernetes.sealed_secrets.cray-oauth2-proxy-customer-access.generate.name' 'cray-oauth2-proxy-customer-access'
yq w -i "$c" 'spec.kubernetes.sealed_secrets.cray-oauth2-proxy-customer-access.generate.data[0].type' randstr
yq w -i "$c" 'spec.kubernetes.sealed_secrets.cray-oauth2-proxy-customer-access.generate.data[0].args.name' cookie-secret
yq w -i "$c" 'spec.kubernetes.sealed_secrets.cray-oauth2-proxy-customer-access.generate.data[0].args.length' 32
yq w -i "$c" 'spec.kubernetes.sealed_secrets.cray-oauth2-proxy-customer-access.generate.data[0].args.encoding' base64
yq w -i "$c" 'spec.kubernetes.sealed_secrets.cray-oauth2-proxy-customer-access.generate.data[0].args.url_safe' yes

yq w -i "$c" 'spec.kubernetes.sealed_secrets.cray-oauth2-proxy-customer-high-speed.generate.name' 'cray-oauth2-proxy-customer-high-speed'
yq w -i "$c" 'spec.kubernetes.sealed_secrets.cray-oauth2-proxy-customer-high-speed.generate.data[0].type' randstr
yq w -i "$c" 'spec.kubernetes.sealed_secrets.cray-oauth2-proxy-customer-high-speed.generate.data[0].args.name' cookie-secret
yq w -i "$c" 'spec.kubernetes.sealed_secrets.cray-oauth2-proxy-customer-high-speed.generate.data[0].args.length' 32
yq w -i "$c" 'spec.kubernetes.sealed_secrets.cray-oauth2-proxy-customer-high-speed.generate.data[0].args.encoding' base64
yq w -i "$c" 'spec.kubernetes.sealed_secrets.cray-oauth2-proxy-customer-high-speed.generate.data[0].args.url_safe' yes

yq w -i --style=single "$c" 'spec.kubernetes.services.cray-oauth2-proxies.customer-management.sealedSecrets[0]'  "{{ kubernetes.sealed_secrets['cray-oauth2-proxy-customer-management'] | toYaml }}"
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-oauth2-proxies.customer-management.hostAliases[0].ip' '{{ network.netstaticips.nmn_api_gw }}'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-oauth2-proxies.customer-management.hostAliases[0].hostnames[+]' 'auth.cmn.{{ network.dns.external }}'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-oauth2-proxies.customer-management.hosts' '{{ proxiedWebAppExternalHostnames.customerManagement }}'

yq w -i --style=single "$c" 'spec.kubernetes.services.cray-oauth2-proxies.customer-access.sealedSecrets[0]' "{{ kubernetes.sealed_secrets['cray-oauth2-proxy-customer-management'] | toYaml }}"
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-oauth2-proxies.customer-access.hostAliases[0].ip' '{{ network.netstaticips.nmn_api_gw }}'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-oauth2-proxies.customer-access.hostAliases[0].hostnames[0]' 'auth.can.{{ network.dns.external }}'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-oauth2-proxies.customer-access.hosts' '{{ proxiedWebAppExternalHostnames.customerAccess }}'

yq w -i --style=single "$c" 'spec.kubernetes.services.cray-oauth2-proxies.customer-high-speed.sealedSecrets[0]' "{{ kubernetes.sealed_secrets['cray-oauth2-proxy-customer-management'] | toYaml }}"
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-oauth2-proxies.customer-high-speed.hostAliases[0].ip' '{{ network.netstaticips.nmn_api_gw }}'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-oauth2-proxies.customer-high-speed.hostAliases[0].hostnames[0]' 'auth.chn.{{ network.dns.external }}'
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-oauth2-proxies.customer-high-speed.hosts' '{{ proxiedWebAppExternalHostnames.customerHighSpeed }}'

# cray-kiali
yq w -i "$c" 'spec.kubernetes.services.cray-kiali.externalAuthority' 'kiali-istio.cmn.{{ network.dns.external }}'
yq w -i "$c" 'spec.kubernetes.services.cray-kiali.kiali-operator.cr.spec.external_services.grafana.url' "https://{{ kubernetes.services['cray-sysmgmt-health']['prometheus-operator'].grafana.externalAuthority}}"
yq w -i "$c" 'spec.kubernetes.services.cray-kiali.kiali-operator.cr.spec.external_services.tracing.url' "https://{{ kubernetes.services['cray-istio'].istio.tracing.externalAuthority}}"

# cray-uas-mgr changes
yq w -i "$c" 'spec.kubernetes.services.cray-uas-mgr.images.images[+]' 'cray/cray-uai-sles15sp1:latest'
yq w -i "$c" 'spec.kubernetes.services.cray-uas-mgr.images.defaultImage' 'cray/cray-uai-sles15sp1:latest'

# cray-metallb
yq w -i --style=single "$c" 'spec.kubernetes.services.cray-metallb.metallb.configInLine' '{{ network.metallb | toYaml }}'

if [[ "$inplace" == "yes" ]]; then
    cp "$c" "$customizations"
else
    cat "$c"
fi

ok_report
