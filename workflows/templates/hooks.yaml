#
# MIT License
#
# (C) Copyright 2022-2023 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: hooks
  namespace: argo
spec:
  entrypoint: main
  templates:
    - name: main
      inputs:
        parameters:
          - name: labels
          - name: dryRun
          - name: targetNcns
          - name: targetNcn
            value: "targetNcn-NOT-SET"
      dag:
        tasks:
        - name: get-hooks-by-label
          inline:
            script:
              image: artifactory.algol60.net/csm-docker/stable/docker.io/portainer/kubectl-shell:latest-v1.21.1-amd64
              command: [sh]
              source: |
                kubectl get hooks -n argo -l {{inputs.parameters.labels}} \
                  -o jsonpath='{.items}'
          # templateRef:
          #   name: kubectl-and-curl-template
          #   template: shell-script
          # arguments:
          #   parameters:
          #     - name: dryRun
          #       value: "false" # even if dryRun is true, we want to get the hooks
          #     - name: scriptContent
          #       value: |
          #         kubectl get hooks -n argo -l {{inputs.parameters.labels}} -o json > /tmp/hooks.json
        - name: run-hooks
          depends: get-hooks-by-label
          templateRef:
            name: ssh-template
            template: shell-script
          arguments:
            parameters:
              - name: dryRun
                value: "{{inputs.parameters.dryRun}}"
              - name: scriptContent
                value: |
                  export TARGET_NCNS="{{inputs.parameters.targetNcns}}"
                  export TARGET_NCN={{inputs.parameters.targetNcn}}
                  {{=jsonpath(item.spec, '$.scriptContent')}}
          withParam: "{{tasks.get-hooks-by-label.outputs.result}}"
            
      