apiVersion: cray-nls.hpe.com/v1
kind: Hook
metadata:
  name: move-critical-singleton-pods
  labels:
    before-all: "true"
spec:
  scriptContent: |
    targetNcns="{{.TargetNcns}}"
    # remove '[' and ']'
    targetNcns=${targetNcns:1:-1}
    # convert to array
    targetNcnsArray=($targetNcns)
    # set last rebuilding worker to nodeMoveTo
    nodeMoveTo=${targetNcnsArray[-1]}
    # try to find a node that is not in targetNcns
    nodes=$(kubectl get nodes | grep "ncn-w" | awk '{print $1}')
    for node in $nodes;do
      if echo $targetNcns | grep $node; then
        echo "skip $node"
      else
        nodeMoveTo=${node}
        break
      fi
    done

    echo

    pods=( "nexus" "ipxe" "kea" "cray-cfs-api-db" )
    for pod in ${pods[@]};do
      podName=$(kubectl get pods --all-namespaces | awk '{print $2}' | grep $pod)
      if [[ -z $podName ]];then
        echo "Couldn't not find pod: $pod"
        echo "something is wrong"
        exit 1
      fi                 
      
      currentNode=$(kubectl get po -A -o wide | grep $podName | awk '{print $8}')
      if [[ "$nodeMoveTo" != "$currentNode" ]]; then
        echo "Move Pod: $podName to Node: $nodeMoveTo"
        /opt/cray/platform-utils/move_pod.sh $podName $nodeMoveTo > /dev/null
      fi

      podName=$(kubectl get pods --all-namespaces | awk '{print $2}' | grep $pod)
      ns=$(kubectl get po -A | grep $podName | awk '{print $1}')
      kubectl wait --for=condition=ready pod $podName -n $ns --timeout=5m
    done
  templateRefName: ssh-template
