#
# MIT License
#
# (C) Copyright 2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: extract-release-distributions
spec:
  tolerations:
    - key: "node-role.kubernetes.io/master"
      operator: "Exists"
      effect: "NoSchedule"
  nodeSelector:
    kubernetes.io/hostname: ncn-m001
  entrypoint: main
  templates:
    - name: main
      inputs:
        parameters:
          - name: auth_token
          - name: global_params
      dag:
        tasks:
          - name: list-tar-files
            inline:
              script:
                image: artifactory.algol60.net/csm-docker/stable/iuf:v0.0.4
                command: [sh]
                source: |
                  #!/bin/sh
                  set -x
                  media_dir="{{=jsonpath(inputs.parameters.global_params, '$.input_params.media_dir')}}"
                  cd $media_dir && ls *.tar.gz | jq -R -s -c 'split("\n")[:-1]'
                volumeMounts:
                  - name: iuf
                    mountPath: /opt/cray/iuf
              volumes:
                - name: iuf
                  hostPath:
                    path: /opt/cray/iuf
                    type: Directory
          - name: extract-tar-files
            dependencies:
              - list-tar-files
            arguments:
              parameters:
                - name: tarfile
                  value: "{{item}}"
                - name: media_dir
                  value: "{{=jsonpath(inputs.parameters.global_params, '$.input_params.media_dir')}}"
            withParam: "{{tasks.list-tar-files.outputs.result}}"
            template: extract-tar-files
    - name: extract-tar-files
      inputs:
        parameters:
          - name: tarfile
          - name: media_dir
      script:
        image: artifactory.algol60.net/csm-docker/stable/docker.io/alpine/git:2.32.0
        command: [sh]
        source: |
          #!/bin/sh
          set -x
          media_dir={{inputs.parameters.media_dir}}
          cd $media_dir
          tar -xvzf {{inputs.parameters.tarfile}} &> /dev/stderr
          dir_name=`tar -tzf {{inputs.parameters.tarfile}} | head -1 | cut -f1 -d"/"`
          cat ${dir_name}/iuf-product-manifest.yaml > /tmp/manifest.yaml
          echo $media_dir/$dir_name > /tmp/original_location
        volumeMounts:
          - name: iuf
            mountPath: /opt/cray/iuf
      outputs:
        parameters:
          - name: manifest
            valueFrom:
              path: "/tmp/manifest.yaml"
          - name: original_location
            valueFrom:
              path: "/tmp/original_location"
      volumes:
        - name: iuf
          hostPath:
            path: /opt/cray/iuf
            type: Directory
