#
# MIT License
#
# (C) Copyright 2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: nexus-docker-upload
  namespace: argo
spec:
  entrypoint: main
  templates:
### Main Steps ###
  - name: main
    inputs:
      parameters:
      - name: auth_token
      - name: global_params
    steps:
    - - name: nexus-get-prerequisites
        template: nexus-get-prerequisites-template
        arguments:
          parameters:
          - name: global_params
            value: "{{inputs.parameters.global_params}}"
    - - name: nexus-docker-load
        template: nexus-docker-load-template
        hooks:
          exit: 
            template: cleanup-template
            arguments:
              parameters:
              - name: nexus_admin_credential_secret_name
                value: "{{steps.nexus-get-prerequisites.outputs.parameters.secret_name}}"
        arguments:
          parameters:
          - name: nexus_setup_image
            value: artifactory.algol60.net/csm-docker/stable/cray-nexus-setup:0.8.1
          - name: nexus_admin_credential_secret_name
            value: "{{steps.nexus-get-prerequisites.outputs.parameters.secret_name}}"
          - name: content
            value: "{{steps.nexus-get-prerequisites.outputs.parameters.current_product_manifest}}"
          - name: product_directory
            value: "{{steps.nexus-get-prerequisites.outputs.parameters.product_directory}}"
### Templates ###
## nexus-get-prerequisites-template ##
  - name: nexus-get-prerequisites-template
    nodeSelector:   
      kubernetes.io/hostname: ncn-m001
    tolerations:
    - key: node-role.kubernetes.io/master
      effect: NoSchedule
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    inputs:
      parameters:
      - name: global_params
        value: "{{workflow.parameters.global_params}}"
    outputs:
      parameters:
        - name: secret_name
          valueFrom:
            path: /tmp/secret_name
        - name: current_product_manifest
          valueFrom:
            path: /tmp/current_product_manifest
        - name: product_directory
          valueFrom:
            path: /tmp/product_directory
    retryStrategy:
        limit: "2"
        retryPolicy: "Always"
        backoff:
          duration: "10s" # Must be a string. Default unit is seconds. Could also be a Duration, e.g.: "2m", "6h", "1d"
          factor: "2"
          maxDuration: "1m"
    script:
      # TBD: This is a repeated function. Can this change to a reference?
      image: artifactory.algol60.net/csm-docker/stable/docker.io/portainer/kubectl-shell:latest-v1.21.1-amd64
      command: [bash]
      source: |
        function sync_item() {
          item_name="$1"
          source_ns="$2"
          destination_name="$3-$RANDOM"
          destination_ns="$4"
          if kubectl get $item_name -n $source_ns &> /dev/null; then
            echo "Syncing $item_name from $source_ns to $destination_ns as $destination_name"
            kubectl get $item_name -n $source_ns -o json | \
              jq 'del(.metadata.namespace)' | \
              jq 'del(.metadata.creationTimestamp)' | \
              jq 'del(.metadata.resourceVersion)' | \
              jq 'del(.metadata.selfLink)' | \
              jq 'del(.metadata.uid)' | \
              jq 'del(.metadata.ownerReferences)' | \
              jq 'del(.metadata.name)' | \
              jq '.metadata |= . + {"name":"'$destination_name'"}' | \
              kubectl apply -n $destination_ns -f -
              return $?
          else
            echo "Didn't find $item_name in the $source_ns namespace"
            return 1
          fi
        }
        err=0
        sync_item secret/nexus-admin-credential nexus nexus-admin-credential-argo argo
        rc=$?
        echo $destination_name > /tmp/secret_name
        if [ $rc -ne 0 ]; then
          err=1
        fi

        # Extract the content of the current product manifest as json.
        echo "Extracting the product manifest."
        cat <<EOF | jq '.product_manifest.current_product.manifest.content' > /tmp/current_product_manifest
          {{inputs.parameters.global_params}}
        EOF
        rc=$?
        if [ $rc -ne 0 ]; then
          err=1
        fi

        # Extract the product directory.
        echo "Extracting the product directory."
        cat <<EOF | jq -r '.product_manifest.current_product.original_location' > /tmp/product_directory
          {{inputs.parameters.global_params}}
        EOF
        rc=$?
        if [ $rc -ne 0 ]; then
          err=1
        fi

        # Exit with an error if we had any.
        exit $err
## nexus-docker-load-template ##
  - name: nexus-docker-load-template
    inputs:
      parameters:
      - name: nexus_setup_image
      - name: nexus_admin_credential_secret_name
      - name: content
      - name: product_directory
    nodeSelector:
      kubernetes.io/hostname: ncn-m001
    tolerations:
    - key: node-role.kubernetes.io/master
      effect: NoSchedule
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    script:
      image: "{{inputs.parameters.nexus_setup_image}}"
      command: [iuf-skopeo-sync]
      args: ["{{inputs.parameters.content}}"]
      env:
      - name: NEXUS_USERNAME
        valueFrom:
          secretKeyRef:
            name: "{{inputs.parameters.nexus_admin_credential_secret_name}}"
            key: username
      - name: NEXUS_PASSWORD
        valueFrom:
          secretKeyRef:
            name: "{{inputs.parameters.nexus_admin_credential_secret_name}}"
            key: password
      volumeMounts:
      - name: image
        mountPath: /images
    # This will be an RBD mount.
    volumes:
    - name: image
      hostPath:
        path: "{{inputs.parameters.product_directory}}"
## cleanup-template ##
## Remove the secret created earlier.
# TBD: This is a repeated function. Can this change to a reference?
  - name: cleanup-template
    inputs:
      parameters:
      - name: nexus_admin_credential_secret_name
        value: "{{steps.nexus-get-prerequisites.outputs.parameters.secret_name}}"
    nodeSelector:
      kubernetes.io/hostname: ncn-m001
    tolerations:
    - key: node-role.kubernetes.io/master
      effect: NoSchedule
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    script:
      image: artifactory.algol60.net/csm-docker/stable/docker.io/portainer/kubectl-shell:latest-v1.21.1-amd64
      command: [bash]
      source: |
        kubectl -n argo delete secret/{{inputs.parameters.nexus_admin_credential_secret_name}}
