@Library('csm-shared-library') _

def sleVersion = '15.3'
def isStable = env.TAG_NAME != null ? true : false

pipeline {
    agent {
        label "metal-gcp-builder"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: "10"))
        timestamps()
    }

    environment {
        GIT_REPO_NAME = getRepoName()
        RELEASE_BRANCH_VERSION = getReleaseBranchVersion()
        VERSION = sh(returnStdout: true, script: "git describe --tags | tr -s '-' '~' | tr -d '^v'").trim()
    }
    
    stages {
        stage("Prepare") {
            agent {
                docker {
                    image "artifactory.algol60.net/csm-docker/stable/csm-docker-sle:${sleVersion}"
                    reuseNode true
                }
            }
            steps {
                script {
                    withCredentials([gitUsernamePassword(credentialsId: 'jenkins-algol60-cray-hpe-github-integration')]) {
                        runLibraryScript("addRpmMetaData.sh", "${env.GIT_REPO_NAME}.spec")
                        sh "make prepare"
                    }
                }
            }
        }

      stage("Build RPM") {
          agent {
              docker {
                  image "artifactory.algol60.net/csm-docker/stable/csm-docker-sle:${sleVersion}"
                  reuseNode true
              }
          }
          steps {
              script {
                  withCredentials([gitUsernamePassword(credentialsId: 'jenkins-algol60-cray-hpe-github-integration')]) {
                      sh "make rpm"
                    }
                }
            }
        }

      stage('Publish') {
          steps {
            script {
                if(env.RELEASE_BRANCH_VERSION){
                    RELEASE_FOLDER = "/" + env.RELEASE_BRANCH_VERSION
                } else {
                    RELEASE_FOLDER = ""
                }
                publishCsmRpms(component: env.GIT_REPO_NAME + RELEASE_FOLDER, pattern: "dist/rpmbuild/RPMS/noarch/*.rpm", os: 'sle-15sp2', arch: "noarch", isStable: isStable)
                publishCsmRpms(component: env.GIT_REPO_NAME + RELEASE_FOLDER, pattern: "dist/rpmbuild/RPMS/noarch/*.rpm", os: 'sle-15sp3', arch: "noarch", isStable: isStable)
                publishCsmRpms(component: env.GIT_REPO_NAME + RELEASE_FOLDER, pattern: "dist/rpmbuild/SRPMS/*.rpm", os: 'sle-15sp2', arch: "src", isStable: isStable)
                publishCsmRpms(component: env.GIT_REPO_NAME + RELEASE_FOLDER, pattern: "dist/rpmbuild/SRPMS/*.rpm", os: 'sle-15sp3', arch: "src", isStable: isStable)
            }
        }
      }
    }
  }


