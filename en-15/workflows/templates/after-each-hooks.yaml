#
# MIT License
#
# (C) Copyright 2022-2023 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: after-each-hooks
  namespace: argo
spec:
  entrypoint: main
  templates:
    - name: main
      inputs:
        parameters:
          - name: dryRun
          - name: targetNcns
            value: "targetNcns-NOT-SET"
          - name: targetNcn
            value: "targetNcn-NOT-SET"
      dag:
        tasks:
        - name: get-after-each-hooks
          inline:
            script:
              image: artifactory.algol60.net/csm-docker/stable/docker.io/portainer/kubectl-shell:latest-v1.21.1-amd64
              command: [sh]
              source: |
                kubectl get hooks -n argo -l after-each=true -o jsonpath='{.items}' | jq -c 'map(.metadata.name)'
        - name: run-after-each-hooks
          depends: get-after-each-hooks
          templateRef:
            name: ssh-template
            template: shell-script
          arguments:
            parameters:
              - name: dryRun
                value: "{{inputs.parameters.dryRun}}"
              - name: scriptContent
                value: |
                  echo "INFO Running after each hook: {{item}}"
                  export TARGET_NCNS="{{inputs.parameters.targetNcns}}"
                  export TARGET_NCN={{inputs.parameters.targetNcn}}
                  randomFile=$(mktemp /tmp/after-each-hook.XXXXXX)
                  kubectl get hooks/{{item}} -n argo -o jsonpath='{.spec.scriptContent}' > $randomFile
                  chmod +x $randomFile
                  $randomFile
          withParam: "{{tasks.get-after-each-hooks.outputs.result}}"
            
      